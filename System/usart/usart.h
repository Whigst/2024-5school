#ifndef __USART_H
#define __USART_H
#include "stdio.h"	
#include "stm32f4xx_conf.h"
#include "sys.h" 
#include "isr.h"
#include "lcd.h"
//////////////////////////////////////////////////////////////////////////////////	 
//V1.3修改说明 
//支持适应不同频率下的串口波特率设置.
//加入了对printf的支持
//增加了串口接收命令功能.
//修正了printf第一个字符丢失的bug
//V1.4修改说明
//1,修改串口初始化IO的bug
//2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
//3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
//4,修改了EN_USART1_RX的使能方式
////////////////////////////////////////////////////////////////////////////////// 	
#define USART_REC_LEN  			200  	//定义最大接收字节数 200
#define EN_USART1_RX 			1		//使能（1）/禁止（0）串口1接收
	  	
extern u8  USART_RX_BUF[USART_REC_LEN]; //接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 
extern u16 USART_RX_STA;         		//接收状态标记	
//如果想串口中断接收，请不要注释以下宏定义
void uart1_init(unsigned int bound);
void uart2_init(unsigned int bound);
void uart3_init(unsigned int bound);
void uart4_init(unsigned int bound);
void uart5_init(unsigned int bound);
void uart6_init(unsigned int bound);
void usart6_send(uint8_t *data, uint8_t len);
void uart_putchar (USART_TypeDef* uratn, char ch);
void uart_putbuff (USART_TypeDef* uratn, u8 *buff, u32 len);
void Uart2Send(unsigned char *p_data, unsigned int uiSize);
u8 uart_getchar(USART_TypeDef* uratn);
void vcan_sendware(void *wareaddr, uint32_t waresize);
void test_uart(void);
void test_uart_Handler(void);
#endif


